name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          pip install poetry
          poetry install 
          poetry --version

      - name: Build docs
        run: |
          cd docs
          poetry run make html

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: |
            bash -o pipefail -c "poetry version | awk '{ print \$2 }'"

      - name: Bump version for developmental release
        if: "! steps.check-version.outputs.tag"
        run: |
          poetry version patch
          version=$(poetry version --short)
          timestamp=$(date +%s)
          dev_version="${version}.dev.${timestamp}"
          poetry version $dev_version

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Publish package on TestPyPI
        if: "! steps.check-version.outputs.tag"
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html

      - name: Create a GitHub release
        if: steps.check-version.outputs.tag
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.check-version.outputs.tag }}
          name: Release ${{ steps.check-version.outputs.tag }}
          body: |
            ${{ steps.check-version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Create a GitHub release draft
        if: "! steps.check-version.outputs.tag"
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.check-version.outputs.tag }}
          name: Release ${{ steps.check-version.outputs.tag }}
          body: |
            ${{ steps.check-version.outputs.changelog }}
          draft: true
          prerelease: true