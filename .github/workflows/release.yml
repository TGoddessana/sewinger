name: Deploy Docs

on:
  push:
    branches: [main]
  pull_request:
    types: [closed]
    branches: [main]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          pip install poetry
          poetry install 
          poetry --version

      - name: Build docs
        run: |
          cd docs
          poetry run make html

      - name: Check Poetry Version
        id: check_poetry_version
        run: |
          CURRENT_VERSION=$(poetry version --no-ansi | awk '{print $2}')
          PREVIOUS_VERSION=$(cat .previous_version || echo "none")

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Poetry version has changed. Deploying to PyPI."
            echo "$CURRENT_VERSION" > .previous_version
          else
            echo "Poetry version has not changed. Checking if it is a new version."

            PACKAGE_NAME=$(poetry version --no-ansi | awk '{print $1}')
            PACKAGE_VERSION=$(poetry version --no-ansi | awk '{print $2}')

            if ! poetry version --list | grep -q "$PACKAGE_NAME $PACKAGE_VERSION"; then
              echo "New version detected. Not deploying to testpypi."
              exit 0
            else
              echo "Same version detected. Deploying to testpypi."
              echo "testpypi" >> $GITHUB_ENV
            fi
          fi

      - name: Deploy to PyPI or TestPyPI
        run: |
          if [ "$GITHUB_ENV" = "testpypi" ]; then
            poetry publish --build --repository testpypi
          else
            poetry publish --build
          fi

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html